{"name":"Work.flow","tagline":"Asynchronous Workflow Library for Node","body":"## work.flow - The asynchronous workflow library for Node\r\n\r\n<p align=\"center\">\r\n  <a href=\"https://gemnasium.com/defstream/work.flow\"><img src=\"https://img.shields.io/gemnasium/defstream/work.flow.svg\"\r\n       alt=\"Gemnasium\"></a>\r\n\r\n  <a href=\"https://travis-ci.org/defstream/work.flow\"><img src=\"https://img.shields.io/travis/defstream/work.flow.svg\"\r\n       alt=\"build status\"></a>\r\n\r\n  <a href=\"https://codecov.io/github/defstream/work.flow\"><img src=\"https://img.shields.io/codecov/c/github/defstream/work.flow.svg\"\r\n        alt=\"coverage\"></a>\r\n\r\n  <a href=\"https://circleci.com/gh/defstream/work.flow\"><img src=\"https://img.shields.io/circleci/project/defstream/work.flow.svg\"\r\n       alt=\"coverage\"></a>\r\n\r\n   <a href=\"http://npmjs.com/package/work.flow\"><img src=\"https://img.shields.io/npm/v/work.flow.svg\"\r\n        alt=\"npm version\"></a>\r\n</p>\r\n\r\n<p align=\"center\">\r\n  <a href=\"https://gitter.im/defstream/work.flow\"><img src=\"https://img.shields.io/gitter/room/defstream/work.flow.svg\"\r\n     alt=\"Chat\"></a>\r\n</p>\r\n\r\n**work.flow** is an asynchronous workflow library for Node.\r\n\r\nThe current version is 0.0.0 and is still going through documentation and testing before development starts, **Unless you are contributing, you should probably not be using this.**\r\n\r\nThe purpose of work.flow is to provide a means of creating individual pieces of code that can be used to quickly create applications or data processing pipelines.\r\n\r\n### TLDR;\r\n\r\n**print-line.js**\r\n\r\n```javascript\r\nvar work = require('work.flow');\r\n\r\nmodule.exports = work.flow.task.definition({\r\n\turi: 'incredi.co/games/worlds-fastest-game/print-line',\r\n\tproperties: {\r\n\t\tmessage: {\r\n\t\t\ttype: String,\r\n\t\t\tvalue: ''\r\n\t\t}\r\n\t},\r\n\ttask: function(options, complete) {\r\n\t\tvar message = options.properties.message;\r\n\t\tconsole.log(message);\r\n\t\treturn complete(null, message);\r\n\t}\r\n});\r\n\r\n```\r\n\r\n**ask-name.js**\r\n\r\n```javascript\r\n\r\nvar util = require('util');\r\nvar work = require('work.flow');\r\nvar readline = require('readline');\r\n\r\nvar io = readline.createInterface({\r\n\tinput: process.stdin,\r\n\toutput: process.stdout\r\n});\r\n\r\nmodule.exports = work.flow.task.definition({\r\n\turi: 'incredi.co/games/worlds-fastest-game/ask-name',\r\n\tproperties: {\r\n\t\tfor: {\r\n\t\t\ttype: String,\r\n\t\t\tvalue: 'Buddy'\r\n\t\t},\r\n\t\tprompt: {\r\n\t\t\ttype: String,\r\n\t\t\tvalue: 'Hey %s, What is your name?',\r\n\t\t\treadOnly: true\r\n\t\t}\r\n\t},\r\n\ttask: function(options, complete) {\r\n\t\tvar prompt = util.format(options.properties.prompt, options.properties.for);\r\n\t\treturn io.question(prompt, function(name) {\r\n\t\t\treturn complete(null, name);\r\n\t\t});\r\n\t}\r\n});\r\n\r\n```\r\n\r\n**ask-for-player-names.js**\r\n\r\n```javascript\r\nvar work = require('work.flow');\r\n\r\nrequire('./ask-name');\r\n\r\nmodule.exports = work.flow.path.definition({\r\n\turi: 'incredi.co/games/worlds-fastest-game/paths/ask-for-player-names',\r\n\tstart: [{\r\n\t\tname: 'player-one',\r\n\t\turi: 'incredi.co/games/worlds-fastest-game/ask-name',\r\n\t\tproperties: {\r\n\t\t\tfor: 'Player 1'\r\n\t\t}\r\n\t}, {\r\n\t\tname: 'player-two',\r\n\t\turi: 'incredi.co/games/worlds-fastest-game/ask-name',\r\n\t\tproperties: {\r\n\t\t\tfor: 'Player 2'\r\n\t\t}\r\n\t}],\r\n\ttimeout: 6000,\r\n\terror: [{\r\n\t\turi: 'work.flow/task/restart'\r\n\t}]\r\n});\r\n\r\n```\r\n\r\n**workflow.js**\r\n\r\n```javascript\r\nvar work = require('work.flow');\r\n\r\nrequire('./print-line');\r\nrequire('./ask-for-player-names');\r\n\r\nmodule.exports = work.flow.definition({\r\n\tname: 'worlds-fastest-game',\r\n\turi: 'incredi.co/games/worlds-fastest-game',\r\n\tstart: [{\r\n\t\tname: 'ask-names',\r\n\t\turi: 'incredi.co/games/worlds-fastest-game/paths/ask-for-player-names'\r\n\t}, {\r\n\t\tname: 'determine-winner',\r\n\t\turi: 'work.flow/task/if-then-else',\r\n\t\tproperties: {\r\n\t\t\tif: {\r\n\t\t\t\tvalue: function(options, callback) {\r\n          //@info return a random number between 1 & 2.\r\n\t\t\t\t\treturn callback(null, Math.round(Math.random() * (2 - 1) + 1));\r\n\t\t\t\t},\r\n\t\t\t\tequals: 1,\r\n\t\t\t\tthen: [{\r\n\t\t\t\t\tname: 'player-one-wins',\r\n\t\t\t\t\turi: 'incredi.co/games/worlds-fastest-game/print-line',\r\n\t\t\t\t\tproperties: {\r\n\t\t\t\t\t\tmessage: '{ask-names.player-one} WINS!!!!'\r\n\t\t\t\t\t}\r\n\t\t\t\t}],\r\n\t\t\t\telse: [{\r\n\t\t\t\t\tname: 'player-two-wins',\r\n\t\t\t\t\turi: 'incredi.co/games/worlds-fastest-game/print-line',\r\n\t\t\t\t\tproperties: {\r\n\t\t\t\t\t\tmessage: '{ask-names.player-two} WINS!!!!'\r\n\t\t\t\t\t}\r\n\t\t\t\t}]\r\n\t\t\t}\r\n\t\t}\r\n\t}, {\r\n\t\turi: 'work.flow/workflow/restart'\r\n\t}],\r\n\ttimeout: 6000,\r\n\terror: [{\r\n\t\turi: 'work.flow/workflow/restart'\r\n\t}]\r\n});\r\n\r\n```\r\n\r\n**index.js**\r\n\r\n```javascript\r\nvar workflow = require('./workflow');\r\n\r\n//@info lets run the worlds fastest game\r\nworkflow.run(function(err, context){\r\n  //@info The worlds fastest game is also the longest\r\n  //      If you take a close look at the work flow\r\n  //      It will never actually end...\r\n  console.log('MUAHAHAHAHAHAHAHAH');\r\n});\r\n\r\n\r\n```\r\n\r\n# Installation\r\n\r\n```shell\r\n$ npm install work.flow --save\r\n```\r\n\r\n# Development Scripts\r\nBefore running any development scripts, be sure to first install the dev modules.\r\n\r\n```shell\r\n$ npm install work.flow --save --dev\r\n```\r\n\r\n#### Build Documentation\r\nOutputs code documentation files to the `./doc/api` folder.\r\n\r\n```shell\r\n$ npm run doc\r\n```\r\n\r\n#### Static Analysis\r\nOutputs static analysis files to the `./doc/analysis` folder.\r\n\r\n```shell\r\n$ npm run analyze\r\n```\r\n\r\n#### Test + Coverage\r\nOutputs code coverage files to the `./doc/coverage` folder.\r\n\r\n```shell\r\n$ npm run test\r\n```\r\n\r\n**CURRENT COVERAGE REPORT**\r\n\r\n![codecov.io](https://codecov.io/github/defstream/work.flow/branch.svg?branch=master)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}